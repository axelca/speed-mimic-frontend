{"ast":null,"code":"var _jsxFileName = \"/Users/axelengstrom/Code/speed-mimic-frontend/src/Messages.tsx\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useEffect, useState } from \"react\";\nimport { useWebSocketContext } from \"./WebSocketContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Messages = () => {\n  _s();\n\n  const {\n    lastMessage\n  } = useWebSocketContext();\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    if (lastMessage) {\n      setMessages(prevState => [...prevState, lastMessage]);\n    }\n  }, [lastMessage, setMessages]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: messages.map(_ref => {\n      let {\n        data,\n        timeStamp\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(Fragment, {\n        children: data\n      }, `${data}-${timeStamp}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false);\n};\n\n_s(Messages, \"TzyhCXahml0GpJW6NwCaWDgIjH8=\", false, function () {\n  return [useWebSocketContext];\n});\n\n_c = Messages;\nexport default Messages;\n\nvar _c;\n\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"names":["Fragment","useEffect","useState","useWebSocketContext","Messages","lastMessage","messages","setMessages","prevState","map","data","timeStamp"],"sources":["/Users/axelengstrom/Code/speed-mimic-frontend/src/Messages.tsx"],"sourcesContent":["import { FC, Fragment, useEffect, useState } from \"react\";\nimport { useWebSocketContext } from \"./WebSocketContext\";\n\nconst Messages: FC = () => {\n  const { lastMessage } = useWebSocketContext();\n\n  const [messages, setMessages] = useState<MessageEvent[]>([]);\n\n  useEffect(() => {\n    if (lastMessage) {\n      setMessages((prevState) => [...prevState, lastMessage]);\n    }\n  }, [lastMessage, setMessages]);\n\n  return (\n    <>\n      {messages.map(({ data, timeStamp }) => (\n        <Fragment key={`${data}-${timeStamp}`}>{data}</Fragment>\n      ))}\n    </>\n  );\n};\n\nexport default Messages;\n"],"mappings":";;;AAAA,SAAaA,QAAb,EAAuBC,SAAvB,EAAkCC,QAAlC,QAAkD,OAAlD;AACA,SAASC,mBAAT,QAAoC,oBAApC;;;;AAEA,MAAMC,QAAY,GAAG,MAAM;EAAA;;EACzB,MAAM;IAAEC;EAAF,IAAkBF,mBAAmB,EAA3C;EAEA,MAAM,CAACG,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAiB,EAAjB,CAAxC;EAEAD,SAAS,CAAC,MAAM;IACd,IAAII,WAAJ,EAAiB;MACfE,WAAW,CAAEC,SAAD,IAAe,CAAC,GAAGA,SAAJ,EAAeH,WAAf,CAAhB,CAAX;IACD;EACF,CAJQ,EAIN,CAACA,WAAD,EAAcE,WAAd,CAJM,CAAT;EAMA,oBACE;IAAA,UACGD,QAAQ,CAACG,GAAT,CAAa;MAAA,IAAC;QAAEC,IAAF;QAAQC;MAAR,CAAD;MAAA,oBACZ,QAAC,QAAD;QAAA,UAAwCD;MAAxC,GAAgB,GAAEA,IAAK,IAAGC,SAAU,EAApC;QAAA;QAAA;QAAA;MAAA,QADY;IAAA,CAAb;EADH,iBADF;AAOD,CAlBD;;GAAMP,Q;UACoBD,mB;;;KADpBC,Q;AAoBN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}