{"ast":null,"code":"var _jsxFileName = \"/Users/axelengstrom/Code/speed-mimic-frontend/src/WebSocketDemo.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useCallback, useEffect } from \"react\";\nimport useWebSocket, { ReadyState } from \"react-use-websocket\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const WebSocketDemo = () => {\n  _s();\n\n  // Public API that will echo messages sent to it back to the client\n  const [socketUrl, setSocketUrl] = useState(\"ws://localhost:1337\");\n  const [messageHistory, setMessageHistory] = useState([]);\n  console.log({\n    messageHistory\n  });\n  const {\n    lastMessage,\n    readyState,\n    sendMessage\n  } = useWebSocket(socketUrl);\n  useEffect(() => {\n    if (lastMessage !== null) {\n      setMessageHistory(prevState => [...prevState, lastMessage]);\n    }\n  }, [lastMessage, setMessageHistory]);\n  const handleClickChangeSocketUrl = useCallback(() => setSocketUrl(\"wss://demos.kaazing.com/echo\"), []);\n  const handleClickSendMessage = useCallback(() => sendMessage(\"Hello\"), [sendMessage]);\n  const connectionStatus = {\n    [ReadyState.CONNECTING]: \"Connecting\",\n    [ReadyState.OPEN]: \"Open\",\n    [ReadyState.CLOSING]: \"Closing\",\n    [ReadyState.CLOSED]: \"Closed\",\n    [ReadyState.UNINSTANTIATED]: \"Uninstantiated\"\n  }[readyState];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClickChangeSocketUrl,\n      type: \"button\",\n      children: \"Click Me to change Socket Url\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: readyState !== ReadyState.OPEN,\n      onClick: handleClickSendMessage,\n      type: \"button\",\n      children: \"Click Me to send Hello\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"The WebSocket is currently \", connectionStatus]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), lastMessage ? /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"Last message: \", lastMessage.data]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 22\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: messageHistory.map(message => /*#__PURE__*/_jsxDEV(\"span\", {\n        children: message ? message.data : null\n      }, message.data, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WebSocketDemo, \"/HvCQsBFoz9FeP5IzawjO16XUrA=\", false, function () {\n  return [useWebSocket];\n});\n\n_c = WebSocketDemo;\n\nvar _c;\n\n$RefreshReg$(_c, \"WebSocketDemo\");","map":{"version":3,"names":["useState","useCallback","useEffect","useWebSocket","ReadyState","WebSocketDemo","socketUrl","setSocketUrl","messageHistory","setMessageHistory","console","log","lastMessage","readyState","sendMessage","prevState","handleClickChangeSocketUrl","handleClickSendMessage","connectionStatus","CONNECTING","OPEN","CLOSING","CLOSED","UNINSTANTIATED","data","map","message"],"sources":["/Users/axelengstrom/Code/speed-mimic-frontend/src/WebSocketDemo.tsx"],"sourcesContent":["import { useState, useCallback, useEffect } from \"react\";\nimport useWebSocket, { ReadyState } from \"react-use-websocket\";\n\nexport const WebSocketDemo = () => {\n  // Public API that will echo messages sent to it back to the client\n  const [socketUrl, setSocketUrl] = useState(\"ws://localhost:1337\");\n  const [messageHistory, setMessageHistory] = useState<MessageEvent[]>([]);\n\n  console.log({ messageHistory });\n\n  const { lastMessage, readyState, sendMessage } = useWebSocket(socketUrl);\n\n  useEffect(() => {\n    if (lastMessage !== null) {\n      setMessageHistory((prevState) => [...prevState, lastMessage]);\n    }\n  }, [lastMessage, setMessageHistory]);\n\n  const handleClickChangeSocketUrl = useCallback(\n    () => setSocketUrl(\"wss://demos.kaazing.com/echo\"),\n    []\n  );\n\n  const handleClickSendMessage = useCallback(\n    () => sendMessage(\"Hello\"),\n    [sendMessage]\n  );\n\n  const connectionStatus = {\n    [ReadyState.CONNECTING]: \"Connecting\",\n    [ReadyState.OPEN]: \"Open\",\n    [ReadyState.CLOSING]: \"Closing\",\n    [ReadyState.CLOSED]: \"Closed\",\n    [ReadyState.UNINSTANTIATED]: \"Uninstantiated\",\n  }[readyState];\n\n  return (\n    <div>\n      <button onClick={handleClickChangeSocketUrl} type=\"button\">\n        Click Me to change Socket Url\n      </button>\n      <button\n        disabled={readyState !== ReadyState.OPEN}\n        onClick={handleClickSendMessage}\n        type=\"button\"\n      >\n        Click Me to send Hello\n      </button>\n      <span>The WebSocket is currently {connectionStatus}</span>\n      {lastMessage ? <span>Last message: {lastMessage.data}</span> : null}\n      <ul>\n        {messageHistory.map((message) => (\n          <span key={message.data}>{message ? message.data : null}</span>\n        ))}\n      </ul>\n    </div>\n  );\n};\n"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,SAAhC,QAAiD,OAAjD;AACA,OAAOC,YAAP,IAAuBC,UAAvB,QAAyC,qBAAzC;;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM;EAAA;;EACjC;EACA,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,qBAAD,CAA1C;EACA,MAAM,CAACQ,cAAD,EAAiBC,iBAAjB,IAAsCT,QAAQ,CAAiB,EAAjB,CAApD;EAEAU,OAAO,CAACC,GAAR,CAAY;IAAEH;EAAF,CAAZ;EAEA,MAAM;IAAEI,WAAF;IAAeC,UAAf;IAA2BC;EAA3B,IAA2CX,YAAY,CAACG,SAAD,CAA7D;EAEAJ,SAAS,CAAC,MAAM;IACd,IAAIU,WAAW,KAAK,IAApB,EAA0B;MACxBH,iBAAiB,CAAEM,SAAD,IAAe,CAAC,GAAGA,SAAJ,EAAeH,WAAf,CAAhB,CAAjB;IACD;EACF,CAJQ,EAIN,CAACA,WAAD,EAAcH,iBAAd,CAJM,CAAT;EAMA,MAAMO,0BAA0B,GAAGf,WAAW,CAC5C,MAAMM,YAAY,CAAC,8BAAD,CAD0B,EAE5C,EAF4C,CAA9C;EAKA,MAAMU,sBAAsB,GAAGhB,WAAW,CACxC,MAAMa,WAAW,CAAC,OAAD,CADuB,EAExC,CAACA,WAAD,CAFwC,CAA1C;EAKA,MAAMI,gBAAgB,GAAG;IACvB,CAACd,UAAU,CAACe,UAAZ,GAAyB,YADF;IAEvB,CAACf,UAAU,CAACgB,IAAZ,GAAmB,MAFI;IAGvB,CAAChB,UAAU,CAACiB,OAAZ,GAAsB,SAHC;IAIvB,CAACjB,UAAU,CAACkB,MAAZ,GAAqB,QAJE;IAKvB,CAAClB,UAAU,CAACmB,cAAZ,GAA6B;EALN,EAMvBV,UANuB,CAAzB;EAQA,oBACE;IAAA,wBACE;MAAQ,OAAO,EAAEG,0BAAjB;MAA6C,IAAI,EAAC,QAAlD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAIE;MACE,QAAQ,EAAEH,UAAU,KAAKT,UAAU,CAACgB,IADtC;MAEE,OAAO,EAAEH,sBAFX;MAGE,IAAI,EAAC,QAHP;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAJF,eAWE;MAAA,0CAAkCC,gBAAlC;IAAA;MAAA;MAAA;MAAA;IAAA,QAXF,EAYGN,WAAW,gBAAG;MAAA,6BAAqBA,WAAW,CAACY,IAAjC;IAAA;MAAA;MAAA;MAAA;IAAA,QAAH,GAAmD,IAZjE,eAaE;MAAA,UACGhB,cAAc,CAACiB,GAAf,CAAoBC,OAAD,iBAClB;QAAA,UAA0BA,OAAO,GAAGA,OAAO,CAACF,IAAX,GAAkB;MAAnD,GAAWE,OAAO,CAACF,IAAnB;QAAA;QAAA;QAAA;MAAA,QADD;IADH;MAAA;MAAA;MAAA;IAAA,QAbF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAqBD,CAtDM;;GAAMnB,a;UAOsCF,Y;;;KAPtCE,a"},"metadata":{},"sourceType":"module"}