{"ast":null,"code":"var _jsxFileName = \"/Users/axelengstrom/Code/speed-mimic-frontend/src/components/Messages.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useWebSocketContext } from \"../contexts/WebSocketContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Messages = () => {\n  _s();\n\n  const [messages, setMessages] = useState([]);\n  const {\n    lastMessage\n  } = useWebSocketContext();\n  useEffect(() => {\n    if (lastMessage) {\n      setMessages(prevState => [...prevState, lastMessage]);\n    }\n  }, [lastMessage, setMessages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: messages.map(_ref => {\n        let {\n          data,\n          timeStamp\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: data\n        }, `${data}-${timeStamp}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Messages, \"3mTLZGdDMBQUvJLUzdmTUT7/HTc=\", false, function () {\n  return [useWebSocketContext];\n});\n\n_c = Messages;\nexport default Messages;\n\nvar _c;\n\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"names":["useEffect","useState","useWebSocketContext","Messages","messages","setMessages","lastMessage","prevState","map","data","timeStamp"],"sources":["/Users/axelengstrom/Code/speed-mimic-frontend/src/components/Messages.tsx"],"sourcesContent":["import { FC, useEffect, useState } from \"react\";\nimport { useWebSocketContext } from \"../contexts/WebSocketContext\";\n\nconst Messages: FC = () => {\n  const [messages, setMessages] = useState<MessageEvent[]>([]);\n  const { lastMessage } = useWebSocketContext();\n\n  useEffect(() => {\n    if (lastMessage) {\n      setMessages((prevState) => [...prevState, lastMessage]);\n    }\n  }, [lastMessage, setMessages]);\n\n  return (\n    <div>\n      <ul>\n        {messages.map(({ data, timeStamp }) => (\n          <li key={`${data}-${timeStamp}`}>{data}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Messages;\n"],"mappings":";;;AAAA,SAAaA,SAAb,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,SAASC,mBAAT,QAAoC,8BAApC;;;AAEA,MAAMC,QAAY,GAAG,MAAM;EAAA;;EACzB,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAiB,EAAjB,CAAxC;EACA,MAAM;IAAEK;EAAF,IAAkBJ,mBAAmB,EAA3C;EAEAF,SAAS,CAAC,MAAM;IACd,IAAIM,WAAJ,EAAiB;MACfD,WAAW,CAAEE,SAAD,IAAe,CAAC,GAAGA,SAAJ,EAAeD,WAAf,CAAhB,CAAX;IACD;EACF,CAJQ,EAIN,CAACA,WAAD,EAAcD,WAAd,CAJM,CAAT;EAMA,oBACE;IAAA,uBACE;MAAA,UACGD,QAAQ,CAACI,GAAT,CAAa;QAAA,IAAC;UAAEC,IAAF;UAAQC;QAAR,CAAD;QAAA,oBACZ;UAAA,UAAkCD;QAAlC,GAAU,GAAEA,IAAK,IAAGC,SAAU,EAA9B;UAAA;UAAA;UAAA;QAAA,QADY;MAAA,CAAb;IADH;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AASD,CAnBD;;GAAMP,Q;UAEoBD,mB;;;KAFpBC,Q;AAqBN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}